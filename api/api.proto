syntax = "proto3";

option go_package = "github.com/Agent-Plus/go-grpc-broker/api";
package api;

// ConsumeRequest
message ConsumeRequest {
    string id = 1;
}

// Identity represents remote application credentials
message Identity {
    string id = 1;
    string secret = 2;
}

// Token represents session identifier issued to the authenticated application
message Token {
    string key = 1;
}

// Message represents message on the exchange
message Message {
    bytes body = 1;
    bool error = 2;
    string id = 3;
    map<string, string> headers = 4;
    string corId = 5;
}

message PublishRequest {
    string topic = 1;
    repeated string tag = 2;
    Message message = 3;
    bool Wait = 4;
}

message PublishResponse {
    int32 ack = 1;
    Message message = 2;
}

// bit flags
enum SubscribeMode {
    Fanout = 0;
    RPC = 1;
    RPCExclusive = 3;
}

// Subscription represents 
message SubscribeRequest {
    string name = 1;
    string tag = 2;
    SubscribeMode mode = 3;
}

message SubscribeResponse {
    string id = 1;
}

message UnsubscribeRequest {
    string id = 1;
}

message UnsubscribeResponse {
    bool ok = 1;
}

service Exchange {
    rpc Authenticate(Identity) returns (Token);
    rpc Consume(ConsumeRequest) returns (stream Message);
    rpc Publish(PublishRequest) returns (PublishResponse);
    rpc Subscribe(SubscribeRequest) returns (SubscribeResponse);
    rpc Unsubscribe(UnsubscribeRequest) returns (UnsubscribeResponse);
}
